@using DustTimers.LegacyApi.Models
@model DustTimers.Web.Models.DistrictTickerViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Upcoming battles</h2>

@if (Model.Districts.Count(p => p.Attacked) == 0)
{
    <p>No upcoming battles</p>
}
else
{
    <table class="table">
        <tr>
            <th></th>
            <th>
                District
            </th>
            <th></th>
            <th>
                UTC (EVE Time)
            </th>
            <th>
                Local Time
            </th>
            <th>
                Clones
            </th>
            <th>
                Infrastructure
            </th>
        </tr>

        @foreach (var item in Model.Districts.Where(p => p.Attacked == true).OrderBy(p => p.NextReinforce))
        {
            <tr>
                <td>
                    @{ var corp = Model.Corporations.FirstOrDefault(p => p.Id == item.Owner.Id);}
                    @if (corp != null)
                    {
                        @Html.ActionLink(corp.Ticker, "Ticker", new { id = corp.Ticker });
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @(item.Attacked == true ? "Defense" : "")
                </td>
                <td>
                    @* UTC *@
                    @{ DateTime time = DateTime.Parse(item.NextReinforce);}
                    @(time.ToString("yyyy/M/d hhmm"))
                </td>
                <td>
                    @*Local time*@
                    @{ var localTimeUtc = time.ToString("yyyy/MM/dd hh:mm UTC");}
                    <time>@localTimeUtc</time>
                <td>
                    @Html.DisplayFor(modelItem => item.Clones)
                    /
                    @Html.DisplayFor(modelItem => item.CloneCapacity)
                </td>
                <td>
                    @(item.Infrastructure.Name)
                </td>
            </tr>
        }
    </table>
}

<h2>Owned districts</h2>
<table class="table">
    <tr>
        <th></th>
        <th>
            District
        </th>
        <th></th>
        <th>
            UTC
        </th>
        <th>
            Local Time
        </th>
        <th>
            Clones
        </th>
        <th>
            Infrastructure
        </th>
    </tr>

    @foreach (var item in Model.Districts.OrderBy(p => p.Owner.Id).ThenBy(p => p.Name))
    {
        <tr>
            <td>
                @{ var corp = Model.Corporations.FirstOrDefault(p => p.Id == item.Owner.Id);}
                @if (corp != null)
                {
                    @Html.ActionLink(corp.Ticker, "Ticker", new { id = corp.Ticker });
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @(item.Attacked == true ? "Under Attack" : "")
            </td>
            <td>
                @* UTC *@
                @{ DateTime time = DateTime.Parse(item.NextReinforce);}
                @(time.ToString("hhmm"))
            </td>
            <td>
                @*Local time*@
                @{ var localTimeUtc = time.ToString("yyyy/MM/dd hh:mm UTC");}
                <time data-timeformat="time">@localTimeUtc</time>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Clones)
                /
                @Html.DisplayFor(modelItem => item.CloneCapacity)
            </td>
            <td>
                @(item.Infrastructure.Name)
            </td>
        </tr>
    }
</table>

@section scripts
{
    <script>
        var convertFunction = function (timeElement) {
            var timeformatAttr = $(timeElement).attr("data-timeformat");
            var time = new Date($(timeElement).text());

            var weekday = new Array(7);
            weekday[0] = "Sun";
            weekday[1] = "Mon";
            weekday[2] = "Tue";
            weekday[3] = "Wed";
            weekday[4] = "Thu";
            weekday[5] = "Fri";
            weekday[6] = "Sat";
            var day = weekday[time.getDay()];

            var result = "";
            if(timeformatAttr == null )
                result = day + " " + time.toLocaleTimeString().replace(":00:‎00‎‎", ":00");
            
            if (timeformatAttr === "time")
                result += time.toLocaleTimeString().replace(":00:‎00‎‎", ":00");

            return result;
        };

        $("time").each(function () {
            $(this).text(convertFunction(this));
        });
    </script>
}
